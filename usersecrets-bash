#!/bin/bash

# This script lists all locations of secrets associated with .csproj files and can create new secret files.

show_help() {
    echo "Usage: $(basename "$0") [--help | -h]"
    echo "       $(basename "$0") [PATH]"
    echo "       $(basename "$0") --create [PATH]"
    echo "       $(basename "$0") --full-path [PATH]"
    echo "  -h, --help          Display this help and exit."
    echo "  --create            Create a new secret file and add it to the .csproj file."
    echo "  --full-path         Display the full path of the .csproj files."
    echo
    echo "This script searches for .csproj files in the specified PATH (or current directory if not provided)"
    echo "and its subdirectories, and lists the locations of secrets associated with them."
}

full_path=false

if [[ $1 == "--help" || $1 == "-h" ]]; then
    show_help
    exit 0
fi

if [[ $1 == "--create" ]]; then
    path="${2:-.}"  # Default to current directory if no path is provided
    secret_id=$(uuidgen)
    projects=$(fd .csproj "$path")
    for project in $projects; do
        # Add UserSecretsId to .csproj file if it doesn't exist
        if ! grep -q "<UserSecretsId>" "$project"; then
            sed -i '/<PropertyGroup>/a \    <UserSecretsId>'"$secret_id"'</UserSecretsId>' "$project"
        fi
        # Create secrets.json file if it doesn't exist
        mkdir -p "$HOME/.microsoft/usersecrets/$secret_id"
        if [ ! -f "$HOME/.microsoft/usersecrets/$secret_id/secrets.json" ]; then
            echo "{}" > "$HOME/.microsoft/usersecrets/$secret_id/secrets.json"
        fi
    done
    exit 0
fi

if [[ $1 == "--full-path" ]]; then
    full_path=true
    shift  # Remove the --full-path argument
fi

path="${1:-.}"  # Default to current directory if no path is provided
projects=$(fd .csproj "$path")

for project in $projects; do
    userSecretIds=$(awk -F '[<>]' '/<UserSecretsId>/ {print $3}' "$project")

    if [ -z "$userSecretIds" ]; then
        continue
    fi

    project_name=$project
    if ! $full_path; then
        project_name=$(basename "$project")
    fi

    printf "%-120s%-100s\n" "$project_name" "$(
        if [ -f "$HOME/.microsoft/usersecrets/$userSecretIds/secrets.json" ];
            then echo "$HOME/.microsoft/usersecrets/$userSecretIds/secrets.json";
            else echo "-";
        fi
    )"

done